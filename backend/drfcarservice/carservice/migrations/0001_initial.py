# Generated by Django 5.0 on 2023-12-25 17:18

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('vin', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('car_model', models.CharField(max_length=50)),
                ('release_date', models.DateField()),
                ('body_number', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SparePartList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='WorkList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('patronymic', models.CharField(max_length=150)),
                ('phone_number', models.CharField(max_length=11)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Ожидание', 'Ожидание'), ('Диагностика', 'Диагностика'), ('Согласование', 'Согласование'), ('Выполнение', 'Выполнение'), ('Завершен', 'Завершен')], default='Ожидание', max_length=15)),
                ('appeal_reason', models.TextField(blank=True, null=True)),
                ('car_number', models.CharField(max_length=20)),
                ('mileage', models.IntegerField()),
                ('engine_number', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('vin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='carservice.car')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_num', models.IntegerField(blank=True)),
                ('doc_type', models.CharField(choices=[('Заказ-наряд', 'Заказ-наряд'), ('Акт приема-передачи', 'Акт приема-передачи')], max_length=20)),
                ('doc_date', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='carservice.order')),
            ],
            options={
                'unique_together': {('doc_num', 'doc_type')},
            },
        ),
        migrations.CreateModel(
            name='CarPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('amount', models.IntegerField()),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='carservice.document')),
            ],
            options={
                'unique_together': {('doc', 'title')},
            },
        ),
        migrations.CreateModel(
            name='CarDamage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('place', models.CharField(max_length=50)),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='carservice.document')),
            ],
            options={
                'unique_together': {('doc', 'title')},
            },
        ),
        migrations.CreateModel(
            name='SparePartCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('start', models.DateField(auto_now_add=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('spare_part', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='carservice.sparepartlist')),
            ],
            options={
                'unique_together': {('spare_part', 'start')},
            },
        ),
        migrations.CreateModel(
            name='SpareParts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='carservice.document')),
                ('spare_part', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='carservice.sparepartlist')),
            ],
            options={
                'unique_together': {('doc', 'spare_part')},
            },
        ),
        migrations.CreateModel(
            name='WorkCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('start', models.DateField(auto_now_add=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='carservice.worklist')),
            ],
            options={
                'unique_together': {('work', 'start')},
            },
        ),
        migrations.CreateModel(
            name='Works',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='carservice.document')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='carservice.worklist')),
            ],
            options={
                'unique_together': {('doc', 'work')},
            },
        ),
    ]
